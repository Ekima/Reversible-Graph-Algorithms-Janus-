/* Minimum-priority queue heap implementation */

procedure minimum(int A[], int min)
    min += A[1]

procedure extractmin(int A[], int heapsize, int min,
                     int heapgarbage[], int garbagecounter)
    if heapsize < 1 then
        error("Heap underflow")
    fi heapsize < 1
    
    min += A[1]
    A[1] -= min
    A[1] += 4294967295
    
    A[1] <=> A[heapsize]
    heapsize -= 1
    call minheapify(A, heapsize, 1, heapgarbage, garbagecounter)
    garbagecounter += 1

procedure minheapify(int A[], int heapsize, int i,
                     int heapgarbage[], int garbagecounter)
    local int left = 0, int right = 0, int min = 0
    call left(i, left)
    call right(i, right)
    
    if i != 1 then
        local int parent = 0
        call parent(i, parent)
        heapgarbage[garbagecounter] -= A[i]
        uncall parent(i, parent)
        delocal int parent = 0
    fi i != 1
    
    if left <= heapsize && A[left] < A[i] then
        min += left
        if right <= heapsize && A[right] < A[min] then
            min -= left
            min += right
        fi right <= heapsize && A[right] < A[left]
    else
        min += i
        if right <= heapsize && A[right] < A[min] then
            min -= i
            min += right
        fi right <= heapsize && A[right] < A[i]
    fi left <= heapsize && A[left] < A[i]
    
    heapgarbage[garbagecounter] += A[i]
    
    if min != i then
        A[i] <=> A[min]
        call minheapify(A, heapsize, min, heapgarbage, garbagecounter)
        
        if A[left] = heapgarbage[garbagecounter] then
            min -= left
        else
            min -= right
        fi A[left] = heapgarbage[garbagecounter]
    fi min = 0
    
    if A[i] = heapgarbage[garbagecounter] then
        min -= i
    fi A[i] = heapgarbage[garbagecounter]
    
    uncall right(i, right)
    uncall left(i, left)
    delocal int left = 0, int right = 0, int min = 0

procedure parent(int i, int parent)
    parent += i / 2

procedure left(int i, int left)
    left += 2 * i

procedure right(int i, int right)
    right += 2 * i + 1

procedure main()
    int A[] = {0, 0, 2, 1, 3, 4}
    
    int heapsize = size(A)-1
    int i = 2
    int heapgarbage[heapsize]
    int garbagecounter = 0
    
    int min1 = 0
    int min2 = 0
    int min3 = 0
    int min4 = 0
    int min5 = 0
    
    call extractmin(A, heapsize, min1, heapgarbage, garbagecounter)
    call extractmin(A, heapsize, min2, heapgarbage, garbagecounter)
    call extractmin(A, heapsize, min3, heapgarbage, garbagecounter)
    call extractmin(A, heapsize, min4, heapgarbage, garbagecounter)
    call extractmin(A, heapsize, min5, heapgarbage, garbagecounter)
    